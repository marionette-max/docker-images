name: Build and push docker image

on:
  push:
    tags:
      - 'gentoo-sources-bundle-*'

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.parse-gentoo-sources-packages.outputs.build_version }}
      manifest_version: ${{ steps.parse-gentoo-sources-packages.outputs.manifest_version }}
      manifest_latest: ${{ steps.parse-gentoo-sources-packages.outputs.manifest_latest }}
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - name: Checkout
        uses: actions/checkout@v2

      - id: parse-gentoo-sources-packages
        run: |
          pip3 install requests beautifulsoup4
          ./tools/gentoo-sources-package-parser.py

  image:
    needs: configure
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_version: ${{fromJson(needs.configure.outputs.build_version)}}
    steps:
      # See https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # See https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # # See https://github.com/docker/build-push-action
      # - name: Login to ZXTeam's Docker Registry
      #   uses: docker/login-action@v1 
      #   with:
      #     registry: docker.registry.zxteam.net
      #     username: ${{ secrets.ZXTEAM_GITLAB_USERNAME }}
      #     password: ${{ secrets.ZXTEAM_GITLAB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build And Push Image
        run: |
          KERNEL_VERSION=$(echo ${{ matrix.build_version }} | cut -d: -f1)
          KERNEL_STABILITY=$(echo ${{ matrix.build_version }} | cut -d: -f2)
          KERNEL_LATESTLY=$(echo ${{ matrix.build_version }} | cut -d: -f3)
          DOCKER_TAG=$(echo ${{ matrix.build_version }} | cut -d: -f4)
          DOCKER_PLATFORM=$(echo ${{ matrix.build_version }} | cut -d: -f5)
          set -x
          DOCKER_BUILDKIT=1 docker build \
            --progress plain \
            --platform "${DOCKER_PLATFORM}" \
            --tag "image-${GITHUB_JOB}" \
            --tag "theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${KERNEL_VERSION}" \
            --build-arg "KERNEL_VERSION=${KERNEL_VERSION}" \
            --build-arg "KERNEL_STABILITY=${KERNEL_STABILITY}" \
            --file "docker/${DOCKER_PLATFORM}/Dockerfile" \
            .
          docker tag "image-${GITHUB_JOB}" "theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${GITHUB_REF_NAME}-${KERNEL_VERSION}"
          docker tag "image-${GITHUB_JOB}" "theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${KERNEL_VERSION}"
          docker push "theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${GITHUB_REF_NAME}-${KERNEL_VERSION}"
          docker push "theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${KERNEL_VERSION}"
          if [ "${KERNEL_LATESTLY}" == "latest" ]; then
            docker tag "image-${GITHUB_JOB}" "theanurin/gentoo-sources-bundle:${DOCKER_TAG}"
            docker push "theanurin/gentoo-sources-bundle:${DOCKER_TAG}"
          fi

  build-manifest-version:
    needs: [configure,image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manifest_version: ${{fromJson(needs.configure.outputs.manifest_version)}}
    steps:
      # See https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Make cross arch docker image via manifest
        run: |
          KERNEL_VERSION=$(echo ${{ matrix.manifest_version }} | cut -d: -f1)
          KERNEL_MAJOR=$(echo -n "${KERNEL_VERSION}" | cut -d. -f1)
          KERNEL_MAJOR_MINOR=$(echo -n "${KERNEL_VERSION}" | cut -d. -f1-2)
          DOCKER_TAGS=$(echo ${{ matrix.manifest_version }} | cut -d: -f2 | sed 's/,/ /g')
          AMEND_OPTS=""
          for DOCKER_TAG in ${DOCKER_TAGS}; do
            AMEND_OPTS="${AMEND_OPTS} --amend \"theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${GITHUB_REF_NAME}-${KERNEL_VERSION}\""
          done
          eval "docker manifest create \"theanurin/gentoo-sources-bundle:${GITHUB_REF_NAME}-${KERNEL_VERSION}\" ${AMEND_OPTS}"
          docker manifest push "theanurin/gentoo-sources-bundle:${GITHUB_REF_NAME}-${KERNEL_VERSION}"
          eval "docker manifest create \"theanurin/gentoo-sources-bundle:${KERNEL_VERSION}\" ${AMEND_OPTS}"
          docker manifest push "theanurin/gentoo-sources-bundle:${KERNEL_VERSION}"
          eval "docker manifest create \"theanurin/gentoo-sources-bundle:${KERNEL_MAJOR}\" ${AMEND_OPTS}"
          docker manifest push "theanurin/gentoo-sources-bundle:${KERNEL_MAJOR}"
          eval "docker manifest create \"theanurin/gentoo-sources-bundle:${KERNEL_MAJOR_MINOR}\" ${AMEND_OPTS}"
          docker manifest push "theanurin/gentoo-sources-bundle:${KERNEL_MAJOR_MINOR}"

  build-manifest-latest:
    needs: [configure,image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manifest_latest: ${{fromJson(needs.configure.outputs.manifest_latest)}}
    steps:
      # See https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Make cross arch docker image via manifest
        run: |
          MANIFEST_ITEMS=$(echo "${{ matrix.manifest_latest }}" | sed 's/,/ /g')
          AMEND_OPTS=""
          for MANIFEST_ITEM in ${MANIFEST_ITEMS}; do
            KERNEL_VERSION=$(echo ${MANIFEST_ITEM} | cut -d: -f1)
            DOCKER_TAG=$(echo ${MANIFEST_ITEM} | cut -d: -f2)
            AMEND_OPTS="${AMEND_OPTS} --amend \"theanurin/gentoo-sources-bundle:${DOCKER_TAG}-${GITHUB_REF_NAME}-${KERNEL_VERSION}\""
          done
          eval "docker manifest create \"theanurin/gentoo-sources-bundle:latest\" ${AMEND_OPTS}"
          docker manifest push "theanurin/gentoo-sources-bundle:latest"

  docs:
    needs: [configure,image,build-manifest-version,build-manifest-latest]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: theanurin/gentoo-sources-bundle
          short-description: "Gentoo stage3 based image with set of packages to make ability to compile kernel in few commands via Docker."
