# Converted from file https://raw.githubusercontent.com/isc-projects/bind9/b8e273b47f86df4262042d295e2ae8f46f901292/contrib/dlz/modules/ldap/testing/dlz.schema
#
# docker run --interactive --tty --rm theanurin/openldap:latest /bin/sh
# wget https://raw.githubusercontent.com/isc-projects/bind9/b8e273b47f86df4262042d295e2ae8f46f901292/contrib/dlz/modules/ldap/testing/dlz.schema
# mkdir -p /tmp/ldif/db
# echo 'include /dlz.schema' > /tmp/ldif/conf
# slaptest -f /tmp/ldif/conf -F /tmp/ldif/db
# Find your LDIF: /tmp/ldif/db/cn\=config/cn\=schema/cn\=\{0}dlz.ldif
#

dn: cn=dlz,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: dlz
olcAttributeTypes: {0}( 1.3.6.1.4.1.18420.1.1.10 NAME 'dlzZoneName' DESC 'DN
 S zone name - domain name not including host name' SUP name SINGLE-VALUE )
olcAttributeTypes: {1}( 1.3.6.1.4.1.18420.1.1.20 NAME 'dlzHostName' DESC 'Ho
 st portion of a domain name' SUP name SINGLE-VALUE )
olcAttributeTypes: {2}( 1.3.6.1.4.1.18420.1.1.30 NAME 'dlzData' DESC 'Data f
 or the resource record' SUP name SINGLE-VALUE )
olcAttributeTypes: {3}( 1.3.6.1.4.1.18420.1.1.40 NAME 'dlzType' DESC 'DNS re
 cord type - A, SOA, NS, MX, etc...' SUP name SINGLE-VALUE )
olcAttributeTypes: {4}( 1.3.6.1.4.1.18420.1.1.50 NAME 'dlzSerial' DESC 'SOA 
 record serial number' EQUALITY integerMatch SYNTAX 1.3.6.1.4.1.1466.115.121
 .1.27 SINGLE-VALUE )
olcAttributeTypes: {5}( 1.3.6.1.4.1.18420.1.1.60 NAME 'dlzRefresh' DESC 'SOA
  record refresh time in seconds' EQUALITY integerMatch SYNTAX 1.3.6.1.4.1.1
 466.115.121.1.27 SINGLE-VALUE )
olcAttributeTypes: {6}( 1.3.6.1.4.1.18420.1.1.70 NAME 'dlzRetry' DESC 'SOA r
 etry time in seconds' EQUALITY integerMatch SYNTAX 1.3.6.1.4.1.1466.115.121
 .1.27 SINGLE-VALUE )
olcAttributeTypes: {7}( 1.3.6.1.4.1.18420.1.1.80 NAME 'dlzExpire' DESC 'SOA 
 expire time in seconds' EQUALITY integerMatch SYNTAX 1.3.6.1.4.1.1466.115.1
 21.1.27 SINGLE-VALUE )
olcAttributeTypes: {8}( 1.3.6.1.4.1.18420.1.1.90 NAME 'dlzMinimum' DESC 'SOA
  minimum time in seconds' EQUALITY integerMatch SYNTAX 1.3.6.1.4.1.1466.115
 .121.1.27 SINGLE-VALUE )
olcAttributeTypes: {9}( 1.3.6.1.4.1.18420.1.1.100 NAME 'dlzAdminEmail' DESC 
 'E-mail address of person responsible for this zone - @ should be replaced 
 with . (period)' SUP name SINGLE-VALUE )
olcAttributeTypes: {10}( 1.3.6.1.4.1.18420.1.1.110 NAME 'dlzPrimaryNS' DESC 
 'Primary name server for this zone - should be host name not IP address' SU
 P name SINGLE-VALUE )
olcAttributeTypes: {11}( 1.3.6.1.4.1.18420.1.1.120 NAME 'dlzIPAddr' DESC 'IP
  address - IPV4 should be in dot notation xxx.xxx.xxx.xxx IPV6 should be in
  colon notation xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx' EQUALITY caseExact
 IA5Match SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{40} SINGLE-VALUE )
olcAttributeTypes: {12}( 1.3.6.1.4.1.18420.1.1.130 NAME 'dlzCName' DESC 'DNS
  cname' SUP name SINGLE-VALUE )
olcAttributeTypes: {13}( 1.3.6.1.4.1.18420.1.1.140 NAME 'dlzPreference' DESC
  'DNS MX record preference.  Lower numbers have higher preference' EQUALITY
  integerMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 SINGLE-VALUE )
olcAttributeTypes: {14}( 1.3.6.1.4.1.18420.1.1.150 NAME 'dlzTTL' DESC 'DNS t
 ime to live - how long this record can be cached by caching DNS servers' EQ
 UALITY integerMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 SINGLE-VALUE )
olcAttributeTypes: {15}( 1.3.6.1.4.1.18420.1.1.160 NAME 'dlzRecordID' DESC '
 Unique ID for each DLZ resource record' SUP name SINGLE-VALUE )
olcObjectClasses: {0}( 1.3.6.1.4.1.18420.1.2.10 NAME 'dlzZone' DESC 'Zone na
 me portion of a domain name' SUP top STRUCTURAL MUST ( objectclass $ dlzZon
 eName ) )
olcObjectClasses: {1}( 1.3.6.1.4.1.18420.1.2.20 NAME 'dlzHost' DESC 'Host na
 me portion of a domain name' SUP top STRUCTURAL MUST ( objectclass $ dlzHos
 tName ) )
olcObjectClasses: {2}( 1.3.6.1.4.1.18420.1.2.30 NAME 'dlzAbstractRecord' DES
 C 'Data common to all DNS record types' SUP top ABSTRACT MUST ( objectclass
  $ dlzRecordID $ dlzHostName $ dlzType $ dlzTTL ) )
olcObjectClasses: {3}( 1.3.6.1.4.1.18420.1.2.40 NAME 'dlzGenericRecord' DESC
  'Generic DNS record - useful when a specific object class has not been def
 ined for a DNS record' SUP dlzAbstractRecord STRUCTURAL MUST dlzData )
olcObjectClasses: {4}( 1.3.6.1.4.1.18420.1.2.50 NAME 'dlzARecord' DESC 'DNS 
 A record' SUP dlzAbstractrecord STRUCTURAL MUST dlzIPAddr )
olcObjectClasses: {5}( 1.3.6.1.4.1.18420.1.2.60 NAME 'dlzNSRecord' DESC 'DNS
  NS record' SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {6}( 1.3.6.1.4.1.18420.1.2.70 NAME 'dlzMXRecord' DESC 'DNS
  MX record' SUP dlzGenericRecord STRUCTURAL MUST dlzPreference )
olcObjectClasses: {7}( 1.3.6.1.4.1.18420.1.2.80 NAME 'dlzSOARecord' DESC 'DN
 S SOA record' SUP dlzAbstractRecord STRUCTURAL MUST ( dlzSerial $ dlzRefres
 h $ dlzRetry $ dlzExpire $ dlzMinimum $ dlzAdminEmail $ dlzPrimaryNS ) )
olcObjectClasses: {8}( 1.3.6.1.4.1.18420.1.2.90 NAME 'dlzTextRecord' DESC 'T
 ext data with spaces should be wrapped in double quotes' SUP dlzGenericReco
 rd STRUCTURAL )
olcObjectClasses: {9}( 1.3.6.1.4.1.18420.1.2.100 NAME 'dlzPTRRecord' DESC 'D
 NS PTR record' SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {10}( 1.3.6.1.4.1.18420.1.2.110 NAME 'dlzCNameRecord' DESC
  'DNS CName record' SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {11}( 1.3.6.1.4.1.18420.1.2.120 NAME 'dlzXFR' DESC 'Host a
 llowed to perform zone transfer' SUP top STRUCTURAL MUST ( objectclass $ dl
 zRecordID $ dlzIPAddr ) )
